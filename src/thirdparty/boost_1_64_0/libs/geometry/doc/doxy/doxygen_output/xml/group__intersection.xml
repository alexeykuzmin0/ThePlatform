<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__intersection" kind="group">
    <compoundname>intersection</compoundname>
    <title>intersection: calculate new geometry</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__intersection_1gaefad75826eb9fd23578089f49673bb99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry1</type>
          </param>
          <param>
            <type>typename Geometry2</type>
          </param>
          <param>
            <type>typename GeometryOut</type>
          </param>
          <param>
            <type>typename Strategy</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::intersection</definition>
        <argsstring>(Geometry1 const &amp;geometry1, Geometry2 const &amp;geometry2, GeometryOut &amp;geometry_out, Strategy const &amp;strategy)</argsstring>
        <name>intersection</name>
        <param>
          <type>Geometry1 const &amp;</type>
          <declname>geometry1</declname>
        </param>
        <param>
          <type>Geometry2 const &amp;</type>
          <declname>geometry2</declname>
        </param>
        <param>
          <type>GeometryOut &amp;</type>
          <declname>geometry_out</declname>
        </param>
        <param>
          <type>Strategy const &amp;</type>
          <declname>strategy</declname>
        </param>
        <briefdescription>
<para>Calculate the intersection of two geometries. </para>        </briefdescription>
        <detaileddescription>
<para>The free function intersection calculates the spatial set theoretic intersection of two geometries. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry1</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Geometry2</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GeometryOut</parametername>
</parameternamelist>
<parameterdescription>
<para>Collection of geometries (e.g. std::vector, std::deque, boost::geometry::multi*) of which the value_type fulfills a Point, LineString or Polygon concept, or it is the output geometry (e.g. for a box) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Strategy</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Intersection Strategy Concept </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry1</parametername>
</parameternamelist>
<parameterdescription>
<para>A model of the specified concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>geometry2</parametername>
</parameternamelist>
<parameterdescription>
<para>A model of the specified concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>geometry_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output geometry, either a multi_point, multi_polygon, multi_linestring, or a box (for intersection of two boxes) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strategy</parametername>
</parameternamelist>
<parameterdescription>
<para>The strategy which will be used for intersection calculations</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk.distinguish>with strategy</qbk.distinguish>   <qbk>[include reference/algorithms/intersection.qbk]</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/intersection/interface.hpp" line="349" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/intersection/interface.hpp" bodystart="349" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection_1gac78b88e0ea7af3453a626a0e6fc588d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry1</type>
          </param>
          <param>
            <type>typename Geometry2</type>
          </param>
          <param>
            <type>typename GeometryOut</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::intersection</definition>
        <argsstring>(Geometry1 const &amp;geometry1, Geometry2 const &amp;geometry2, GeometryOut &amp;geometry_out)</argsstring>
        <name>intersection</name>
        <param>
          <type>Geometry1 const &amp;</type>
          <declname>geometry1</declname>
        </param>
        <param>
          <type>Geometry2 const &amp;</type>
          <declname>geometry2</declname>
        </param>
        <param>
          <type>GeometryOut &amp;</type>
          <declname>geometry_out</declname>
        </param>
        <briefdescription>
<para>Calculate the intersection of two geometries. </para>        </briefdescription>
        <detaileddescription>
<para>The free function intersection calculates the spatial set theoretic intersection of two geometries. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry1</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Geometry2</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GeometryOut</parametername>
</parameternamelist>
<parameterdescription>
<para>Collection of geometries (e.g. std::vector, std::deque, boost::geometry::multi*) of which the value_type fulfills a Point, LineString or Polygon concept, or it is the output geometry (e.g. for a box) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry1</parametername>
</parameternamelist>
<parameterdescription>
<para>A model of the specified concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>geometry2</parametername>
</parameternamelist>
<parameterdescription>
<para>A model of the specified concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>geometry_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The output geometry, either a multi_point, multi_polygon, multi_linestring, or a box (for intersection of two boxes)</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk>[include reference/algorithms/intersection.qbk]</qbk>  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/intersection/interface.hpp" line="383" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/intersection/interface.hpp" bodystart="383" bodyend="392"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
