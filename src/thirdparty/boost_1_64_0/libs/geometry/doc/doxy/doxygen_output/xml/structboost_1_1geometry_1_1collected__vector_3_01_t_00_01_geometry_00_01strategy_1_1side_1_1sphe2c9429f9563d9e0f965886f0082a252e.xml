<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e" kind="struct" prot="public">
    <compoundname>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</compoundname>
    <includes local="no">collect_vectors.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Geometry</type>
      </param>
      <param>
        <type>typename CT</type>
      </param>
      <param>
        <type>typename CSTag</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a1a3271f5aea6474b3a2b4e3a42f8bfa5" prot="public" static="no">
        <type><ref refid="structboost_1_1geometry_1_1coordinate__system" kindref="compound">coordinate_system</ref>&lt; Geometry &gt;::<ref refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a2bb5aec2498cf4616d7bede10bc4ae3a" kindref="member">type</ref></type>
        <definition>typedef coordinate_system&lt;Geometry&gt;::type boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::cs_type</definition>
        <argsstring></argsstring>
        <name>cs_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="169" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a04befa57eda084fd54cf1ffa3268e62b" prot="public" static="no">
        <type><ref refid="classboost_1_1geometry_1_1model_1_1point" kindref="compound">model::point</ref>&lt; T, 2, <ref refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a1a3271f5aea6474b3a2b4e3a42f8bfa5" kindref="member">cs_type</ref> &gt;</type>
        <definition>typedef model::point&lt;T, 2, cs_type&gt; boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::point_type</definition>
        <argsstring></argsstring>
        <name>point_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="170" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a2bb5aec2498cf4616d7bede10bc4ae3a" prot="public" static="no">
        <type>T</type>
        <definition>typedef T boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="167" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a1ec6de12d2736518e0cd8bf3e415335f" prot="public" static="no">
        <type><ref refid="classboost_1_1geometry_1_1model_1_1point" kindref="compound">model::point</ref>&lt; T, 3, <ref refid="structboost_1_1geometry_1_1cs_1_1cartesian" kindref="compound">cs::cartesian</ref> &gt;</type>
        <definition>typedef model::point&lt;T, 3, cs::cartesian&gt; boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::vector_type</definition>
        <argsstring></argsstring>
        <name>vector_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="171" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a8ebba12074a53dc391de8258b7b3b557" prot="private" static="no" mutable="no">
        <type><ref refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a1ec6de12d2736518e0cd8bf3e415335f" kindref="member">vector_type</ref></type>
        <definition>vector_type boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="255" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a63191012a8a93d6e261a1a7077c47a2d" prot="private" static="no" mutable="no">
        <type><ref refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a1ec6de12d2736518e0cd8bf3e415335f" kindref="member">vector_type</ref></type>
        <definition>vector_type boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="257" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a68c6cfe4678653f61a9aed5c6c7a098a" prot="private" static="no" mutable="no">
        <type><ref refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a04befa57eda084fd54cf1ffa3268e62b" kindref="member">point_type</ref></type>
        <definition>point_type boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::origin</definition>
        <argsstring></argsstring>
        <name>origin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="254" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a844cd96f60045167bafe821e7a4e45ad" prot="private" static="no" mutable="no">
        <type><ref refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a1ec6de12d2736518e0cd8bf3e415335f" kindref="member">vector_type</ref></type>
        <definition>vector_type boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::prev</definition>
        <argsstring></argsstring>
        <name>prev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="256" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a29ff400c9b03c36d61db1790a658c059" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::collected_vector</definition>
        <argsstring>()</argsstring>
        <name>collected_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="173" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="173" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1af0881cdafef1f1c77998b57e4a239760" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::collected_vector</definition>
        <argsstring>(Point const &amp;p1, Point const &amp;p2)</argsstring>
        <name>collected_vector</name>
        <param>
          <type>Point const &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>Point const &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="177" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="177" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1ac7fa840a25582f946bed449ae4d94d65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::next_is_collinear</definition>
        <argsstring>(collected_vector const &amp;other) const </argsstring>
        <name>next_is_collinear</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1collected__vector" kindref="compound">collected_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="226" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a5fb63853bfde4f6c71dc59e0a4e89cd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="188" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="188" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a5b605d69b88043a30be40ae0b2bb82be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::operator&lt;</definition>
        <argsstring>(collected_vector const &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1collected__vector" kindref="compound">collected_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="202" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="202" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1aef1e340445082ab39a7d3bf9ae2ceb83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::operator==</definition>
        <argsstring>(collected_vector const &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1collected__vector" kindref="compound">collected_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="232" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="232" bodyend="237"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1ae989e5f640b5ab03f34d6006c6b38999" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;::is_collinear</definition>
        <argsstring>(collected_vector const &amp;other) const </argsstring>
        <name>is_collinear</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1collected__vector" kindref="compound">collected_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="241" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="241" bodyend="245"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="166" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="162" bodyend="258"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a29ff400c9b03c36d61db1790a658c059" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>collected_vector</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1af0881cdafef1f1c77998b57e4a239760" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>collected_vector</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a1a3271f5aea6474b3a2b4e3a42f8bfa5" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>cs_type</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a8ebba12074a53dc391de8258b7b3b557" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>direction</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1ae989e5f640b5ab03f34d6006c6b38999" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>is_collinear</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a63191012a8a93d6e261a1a7077c47a2d" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>next</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1ac7fa840a25582f946bed449ae4d94d65" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>next_is_collinear</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a5fb63853bfde4f6c71dc59e0a4e89cd9" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>normalize</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a5b605d69b88043a30be40ae0b2bb82be" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>operator&lt;</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1aef1e340445082ab39a7d3bf9ae2ceb83" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>operator==</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a68c6cfe4678653f61a9aed5c6c7a098a" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>origin</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a04befa57eda084fd54cf1ffa3268e62b" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>point_type</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a844cd96f60045167bafe821e7a4e45ad" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>prev</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a2bb5aec2498cf4616d7bede10bc4ae3a" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>type</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1sphe2c9429f9563d9e0f965886f0082a252e_1a1ec6de12d2736518e0cd8bf3e415335f" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::spherical_side_formula&lt; CT &gt;, CSTag &gt;</scope><name>vector_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
