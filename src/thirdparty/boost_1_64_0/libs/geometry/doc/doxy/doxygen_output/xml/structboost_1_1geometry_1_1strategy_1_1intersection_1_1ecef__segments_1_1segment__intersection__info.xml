<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info" kind="struct" prot="public">
    <compoundname>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</compoundname>
    <includes local="no">intersection.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename CoordinateType</type>
      </param>
      <param>
        <type>typename SegmentRatio</type>
      </param>
      <param>
        <type>typename Vector3d</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a32a5dda305bbcd25dc0900c940da19b1" prot="public" static="no">
        <type><ref refid="structboost_1_1geometry_1_1select__most__precise" kindref="compound">select_most_precise</ref>&lt; CoordinateType, double &gt;::type</type>
        <definition>typedef select_most_precise&lt; CoordinateType, double &gt;::type boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::promoted_type</definition>
        <argsstring></argsstring>
        <name>promoted_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="159" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1accd33aced1bcc687fef3631b94d2649e" prot="public" static="no" mutable="no">
        <type>CalcPolicy const &amp;</type>
        <definition>CalcPolicy const&amp; boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::calc_policy</definition>
        <argsstring></argsstring>
        <name>calc_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="217" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1aedcdecdf4c429ca830074ee724d6a766" prot="public" static="no" mutable="no">
        <type>Vector3d</type>
        <definition>Vector3d boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::intersection_point</definition>
        <argsstring></argsstring>
        <name>intersection_point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="212" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a8eeea089446053348bb5e0d719195421" prot="public" static="no" mutable="no">
        <type><ref refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1adfd177691ed152aa797ef0febe6ac7d3" kindref="member">intersection_point_flag</ref></type>
        <definition>intersection_point_flag boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::ip_flag</definition>
        <argsstring></argsstring>
        <name>ip_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="215" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a1731fd4f4dc48790ded4079be64dcf90" prot="public" static="no" mutable="no">
        <type>SegmentRatio</type>
        <definition>SegmentRatio boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::robust_ra</definition>
        <argsstring></argsstring>
        <name>robust_ra</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="213" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1abd9daa9face714788abce65947f17a20" prot="public" static="no" mutable="no">
        <type>SegmentRatio</type>
        <definition>SegmentRatio boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::robust_rb</definition>
        <argsstring></argsstring>
        <name>robust_rb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="214" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a33f1dad41fa7d8a1b2e4386dee7f3c3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Segment1</type>
          </param>
          <param>
            <type>typename Segment2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::assign</definition>
        <argsstring>(Point &amp;point, Segment1 const &amp;a, Segment2 const &amp;b) const </argsstring>
        <name>assign</name>
        <param>
          <type>Point &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>Segment1 const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Segment2 const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="187" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="187" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a754ae5803751b96153a3d0b96f10e5cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Segment1</type>
          </param>
          <param>
            <type>typename Segment2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::assign_a</definition>
        <argsstring>(Point &amp;point, Segment1 const &amp;a, Segment2 const &amp;b) const </argsstring>
        <name>assign_a</name>
        <param>
          <type>Point &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>Segment1 const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Segment2 const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="176" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1abdf13ba304fb42267e854d74629eed5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Segment1</type>
          </param>
          <param>
            <type>typename Segment2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::assign_b</definition>
        <argsstring>(Point &amp;point, Segment1 const &amp;a, Segment2 const &amp;b) const </argsstring>
        <name>assign_b</name>
        <param>
          <type>Point &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>Segment1 const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Segment2 const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="181" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a49ac24d9b7f33746cf2d4b5455865184" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a32a5dda305bbcd25dc0900c940da19b1" kindref="member">promoted_type</ref></type>
        <definition>promoted_type boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::comparable_length_a</definition>
        <argsstring>() const </argsstring>
        <name>comparable_length_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="165" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1aed76f8e931e3808c4dbfcf8cf3d2e5a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a32a5dda305bbcd25dc0900c940da19b1" kindref="member">promoted_type</ref></type>
        <definition>promoted_type boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::comparable_length_b</definition>
        <argsstring>() const </argsstring>
        <name>comparable_length_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="170" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a6bb01a10bb1a1b0e9936561764a1a3fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::strategy::intersection::ecef_segments&lt; CalcPolicy, CalculationType &gt;::segment_intersection_info&lt; CoordinateType, SegmentRatio, Vector3d &gt;::segment_intersection_info</definition>
        <argsstring>(CalcPolicy const &amp;calc)</argsstring>
        <name>segment_intersection_info</name>
        <param>
          <type>CalcPolicy const &amp;</type>
          <declname>calc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="161" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="161" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" line="155" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/strategies/spherical/intersection.hpp" bodystart="154" bodyend="218"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a33f1dad41fa7d8a1b2e4386dee7f3c3c" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>assign</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a754ae5803751b96153a3d0b96f10e5cf" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>assign_a</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1abdf13ba304fb42267e854d74629eed5b" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>assign_b</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1accd33aced1bcc687fef3631b94d2649e" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>calc_policy</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a49ac24d9b7f33746cf2d4b5455865184" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>comparable_length_a</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1aed76f8e931e3808c4dbfcf8cf3d2e5a3" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>comparable_length_b</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1aedcdecdf4c429ca830074ee724d6a766" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>intersection_point</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a8eeea089446053348bb5e0d719195421" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>ip_flag</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a32a5dda305bbcd25dc0900c940da19b1" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>promoted_type</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a1731fd4f4dc48790ded4079be64dcf90" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>robust_ra</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1abd9daa9face714788abce65947f17a20" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>robust_rb</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1intersection_1_1ecef__segments_1_1segment__intersection__info_1a6bb01a10bb1a1b0e9936561764a1a3fe" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::ecef_segments::segment_intersection_info</scope><name>segment_intersection_info</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
