<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332" kind="struct" prot="public">
    <compoundname>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</compoundname>
    <includes local="no">collect_vectors.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Geometry</type>
      </param>
      <param>
        <type>typename CT</type>
      </param>
      <param>
        <type>typename CSTag</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a12d2781468c469df0676b31e169a5e61" prot="public" static="no">
        <type>T</type>
        <definition>typedef T boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="71" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a584e36fb80ba4ebe0e2dad17c6f3fff5" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::dx</definition>
        <argsstring></argsstring>
        <name>dx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="155" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a1e684e85222a1f56a8d29c48c5284eb3" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::dy</definition>
        <argsstring></argsstring>
        <name>dy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="155" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a8e2b5edc9125999fcfa1d8cc830e7ae7" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="154" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1aee1514e71b3e1294c8250378a8f9cc19" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="154" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a1a29adb60a1b7661ca51a377c82d28e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::collected_vector</definition>
        <argsstring>()</argsstring>
        <name>collected_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="73" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="73" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1ae70caf37552de242765a7dc3785aeb8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::collected_vector</definition>
        <argsstring>(T const &amp;px, T const &amp;py, T const &amp;pdx, T const &amp;pdy)</argsstring>
        <name>collected_vector</name>
        <param>
          <type>T const &amp;</type>
          <declname>px</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>py</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>pdx</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>pdy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="76" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a2bc151194e7439af7dd57bf62c1cadd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::collected_vector</definition>
        <argsstring>(Point const &amp;p1, Point const &amp;p2)</argsstring>
        <name>collected_vector</name>
        <param>
          <type>Point const &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>Point const &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="87" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1aa08736e897569cd036d2f2a09ca5ea7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::next_is_collinear</definition>
        <argsstring>(collected_vector const &amp;other) const </argsstring>
        <name>next_is_collinear</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1collected__vector" kindref="compound">collected_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="130" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a2352efcd1755d9e624f41498c0c0b8c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="96" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="96" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a99e8bd77a256bb05c8af643f91bb31a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::operator&lt;</definition>
        <argsstring>(collected_vector const &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1collected__vector" kindref="compound">collected_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="113" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="113" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1aa77dbce19c98b2921a5ca32b647aee0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::operator==</definition>
        <argsstring>(collected_vector const &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1collected__vector" kindref="compound">collected_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="136" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="136" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1ab1f3de2c0b24bb2d9a8e985bec658520" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;::same_direction</definition>
        <argsstring>(collected_vector const &amp;other) const </argsstring>
        <name>same_direction</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1collected__vector" kindref="compound">collected_vector</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="144" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="144" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" line="70" column="1" bodyfile="/home/ubuntu/boost/boost/geometry/algorithms/detail/equals/collect_vectors.hpp" bodystart="66" bodyend="157"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a1a29adb60a1b7661ca51a377c82d28e2" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>collected_vector</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1ae70caf37552de242765a7dc3785aeb8d" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>collected_vector</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a2bc151194e7439af7dd57bf62c1cadd7" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>collected_vector</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a584e36fb80ba4ebe0e2dad17c6f3fff5" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>dx</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a1e684e85222a1f56a8d29c48c5284eb3" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>dy</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1aa08736e897569cd036d2f2a09ca5ea7c" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>next_is_collinear</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a2352efcd1755d9e624f41498c0c0b8c2" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>normalize</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a99e8bd77a256bb05c8af643f91bb31a6" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>operator&lt;</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1aa77dbce19c98b2921a5ca32b647aee0b" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>operator==</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1ab1f3de2c0b24bb2d9a8e985bec658520" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>same_direction</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a12d2781468c469df0676b31e169a5e61" prot="public" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>type</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1a8e2b5edc9125999fcfa1d8cc830e7ae7" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>x</name></member>
      <member refid="structboost_1_1geometry_1_1collected__vector_3_01_t_00_01_geometry_00_01strategy_1_1side_1_1side64c58171b392bd5ce882b3c1b49e2332_1aee1514e71b3e1294c8250378a8f9cc19" prot="private" virt="non-virtual"><scope>boost::geometry::collected_vector&lt; T, Geometry, strategy::side::side_by_triangle&lt; CT &gt;, CSTag &gt;</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
